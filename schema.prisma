datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // previewFeatures = "createMany"

}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Region {
  id        String     @id @default(cuid())
  regName   String
  regCode   String
  divisions Division[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt

}

model EducType {
  id           String   @id @default(cuid())
  educTypeName String
  educTypeCode String
  serieses     Series[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt

}

model Exam {
  id        String              @id @default(cuid())
  examName  String
  examCode  String
  cenexases CenterExamSession[]

  exassers  Exasser[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt


}

model Score {
  id                String          @id @default(cuid())
  subjectAve        Float
  coeff             Int             @default(1)
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @default(now()) @updatedAt
  Subject           Subject         @relation(fields: [subjectId], references: [id])
  subjectId         String
  subjRegMark       String          @unique
  Registration      Registration    @relation(fields: [registrationId], references: [id])
  registrationId    String
  CenexasExaminer   CenexasExaminer @relation(fields: [cenexasExaminerId], references: [id])
  cenexasExaminerId String
}

model Attendance {
  id             String       @id @default(cuid())
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now()) @updatedAt
  handIn         String
  collected      String
  Registration   Registration @relation(fields: [registrationId], references: [id])
  registrationId String

  Invigilation   Invigilation @relation(fields: [invigilationId], references: [id])
  invigilationId String
  Subject        Subject      @relation(fields: [subjectId], references: [id])
  subjectId      String
}

model Session {
  id          String    @id @default(cuid())
  sessionName String
  sessionCode String
  exassers    Exasser[]

  cenexases CenterExamSession[]
  createdAt DateTime            @default(now())
  updatedAt DateTime            @default(now()) @updatedAt

}

model Hall {
  id           String        @id @default(cuid())
  hallName     String
  cenexasHalls CenexasHall[]
  hallCode     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now()) @updatedAt

  Center   Center @relation(fields: [centerId], references: [id])
  centerId String
}

model CenexasHall {
  id                 String              @id @default(cuid())
  cenexasHallDistros CenexasHallDistro[]
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @default(now()) @updatedAt

  Hall                Hall              @relation(fields: [hallId], references: [id])
  hallId              String
  registeredHall      String            @unique
  CenterExamSession   CenterExamSession @relation(fields: [centerExamSessionId], references: [id])
  centerExamSessionId String
}

model CenexasHallDistro {
  id            String         @id @default(cuid())
  invigilations Invigilation[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now()) @updatedAt

  CenexasHall   CenexasHall @relation(fields: [cenexasHallId], references: [id])
  cenexasHallId String
  Timetable     Timetable   @relation(fields: [timetableId], references: [id])
  timetableId   String

  CenterExamSession   CenterExamSession @relation(fields: [centerExamSessionId], references: [id])
  centerExamSessionId String
}

model Invigilation {
  id                  String            @id @default(cuid())
  attendances         Attendance[]
  seatingPlans        SeatingPlan[]
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @default(now()) @updatedAt
  CenexasHallDistro   CenexasHallDistro @relation(fields: [cenexasHallDistroId], references: [id])
  cenexasHallDistroId String
  CenexasExaminer     CenexasExaminer   @relation(fields: [cenexasExaminerId], references: [id])
  cenexasExaminerId   String
}

model Timetable {

  id                 String              @id @default(cuid())
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @default(now()) @updatedAt
  period             String
  cenexasHallDistros CenexasHallDistro[]
  subjDate           DateTime            @default(now())
  startTime          DateTime            @default(now())
  endTime            DateTime            @default(now())
  duration           String
  subjectExasser     String              @unique
  series             String

  SubjectSeries   SubjectSeries @relation(fields: [subjectSeriesId], references: [id])
  subjectSeriesId String
  Exasser         Exasser       @relation(fields: [exasserId], references: [id])
  exasserId       String
}

model Exasser {
  id                String         @id @default(cuid())
  timetables        Timetable[]
  registrations     Registration[]
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @default(now()) @updatedAt
  examSessionSeries String         @unique

  Exam      Exam    @relation(fields: [examId], references: [id])
  examId    String
  Session   Session @relation(fields: [sessionId], references: [id])
  sessionId String
  Series    Series  @relation(fields: [seriesId], references: [id])
  seriesId  String
}

model Grade {
  id        String     @id @default(cuid())
  gradeName String
  gradeCode String
  examiners Examiner[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt

}

model Rank {
  id               String            @id @default(cuid())
  rankName         String
  rankCode         String
  cenexasExaminers CenexasExaminer[]
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @default(now()) @updatedAt

}

model Phase {
  id               String            @id @default(cuid())
  phaseName        String
  phaseCode        String
  cenexasExaminers CenexasExaminer[]
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @default(now()) @updatedAt

}

model Division {
  id           String        @id @default(cuid())
  divisionName String
  divisionCode String
  subdivisions Subdivision[]
  Region       Region        @relation(fields: [regionId], references: [id])
  regionId     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now()) @updatedAt
}

model Series {
  id              String          @id @default(cuid())
  seriesName      String
  seriesCode      String
  registrations   Registration[]
  subjectSerieses SubjectSeries[]
  exassers        Exasser[]

  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
  EducType   EducType @relation(fields: [educTypeId], references: [id])
  educTypeId String
}

model SubjectSeries {
  id         String      @id @default(cuid())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @default(now()) @updatedAt
  timetables Timetable[]
  Series     Series      @relation(fields: [seriesId], references: [id])
  seriesId   String
  subjSeries String      @unique
  Subject    Subject     @relation(fields: [subjectId], references: [id])
  subjectId  String
  coeff      Int         @default(1)
}

model Subdivision {
  id         String   @id @default(cuid())
  subdivName String
  subdivCode String
  towns      Town[]
  Division   Division @relation(fields: [divisionId], references: [id])
  divisionId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
}

model Town {
  id            String      @id @default(cuid())
  townName      String
  townCode      String
  centers       Center[]
  Subdivision   Subdivision @relation(fields: [subdivisionId], references: [id])
  subdivisionId String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @default(now()) @updatedAt
}

model Center {
  id               String              @id @default(cuid())
  centerName       String
  centerPublicCode String              @unique
  centerSecretCode String              @unique
  centerCode       String
  centerNumber     Int                 @unique
  cenexases        CenterExamSession[]
  halls            Hall[]
  createdAt        DateTime            @default(now())
  updatedAt        DateTime            @default(now()) @updatedAt
  Town             Town                @relation(fields: [townId], references: [id])
  townId           String
}

model Subject {
  id              String          @id @default(cuid())
  subjectName     String
  subjectCode     String
  subjectSerieses SubjectSeries[]
  attendances     Attendance[]
  examiners       Examiner[]
  scores          Score[]
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @default(now()) @updatedAt
}

model Candidate {
  id                  String         @id @default(cuid())
  candidate1stName    String
  candidate2ndName    String
  candidate3rdName    String
  placeOfBirth        String
  phoneNumber         Int
  candidateSecretCode String         @unique
  gender              String
  email               String         @unique
  candidateMatricule  String         @unique
  registrations       Registration[]
  image               String
  dateOfBirth         DateTime       @default(now())
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @default(now()) @updatedAt
}

model Examiner {
  id                 String            @id @default(cuid())
  firstName          String
  middleName         String
  lastName           String
  examinerMatricule  String            @unique
  examinerSecretCode String            @unique
  gender             String
  image              String
  email              String            @unique
  phoneNumber        Int
  cenexasExaminers   CenexasExaminer[]
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @default(now()) @updatedAt
  Grade              Grade             @relation(fields: [gradeId], references: [id])
  gradeId            String
  Subject            Subject           @relation(fields: [subjectId], references: [id])
  subjectId          String
}

model Registration {
  id                     String            @id @default(cuid())
  candAnonymationCode    String            @unique
  scores                 Score[]
  attendances            Attendance[]
  reports                Report[]
  createdAt              DateTime          @default(now())
  updatedAt              DateTime          @default(now()) @updatedAt
  aptitude               String
  EPF1                   String
  EPF2                   String
  candRegistrationNumber String            @unique
  candExamSession        String            @unique
  Candidate              Candidate         @relation(fields: [candidateId], references: [id])
  candidateId            String
  Series                 Series            @relation(fields: [seriesId], references: [id])
  seriesId               String
  CenterExamSession      CenterExamSession @relation(fields: [centerExamSessionId], references: [id])
  centerExamSessionId    String
  Exasser                Exasser           @relation(fields: [exasserId], references: [id])
  exasserId              String
}

model CenexasExaminer {
  id                   String            @id @default(cuid())
  createdAt            DateTime          @default(now())
  updatedAt            DateTime          @default(now()) @updatedAt
  reports              Report[]
  scores               Score[]
  CenterExamSession    CenterExamSession @relation(fields: [centerExamSessionId], references: [id])
  centerExamSessionId  String
  cenexasExaminerPhase String            @unique
  Rank                 Rank              @relation(fields: [rankId], references: [id])
  rankId               String
  Phase                Phase             @relation(fields: [phaseId], references: [id])
  phaseId              String
  Examiner             Examiner          @relation(fields: [examinerId], references: [id])
  examinerId           String
  invigilations        Invigilation[]
  Payee                Payment[]         @relation("payee")
  Paymaster            Payment[]         @relation("paymaster")

}

model Report {
  id                String          @id @default(cuid())
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @default(now()) @updatedAt
  title             String
  content           String
  ReportType        ReportType      @relation(fields: [reportTypeId], references: [id])
  reportTypeId      String
  CenexasExaminer   CenexasExaminer @relation(fields: [cenexasExaminerId], references: [id])
  cenexasExaminerId String

  Registration        Registration      @relation(fields: [registrationId], references: [id])
  registrationId      String
  CenterExamSession   CenterExamSession @relation(fields: [centerExamSessionId], references: [id])
  centerExamSessionId String
}

model ReportType {
  id             String   @id @default(cuid())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now()) @updatedAt
  reportTypeName String   @unique
  reportTypeCode String
  reports        Report[]

}

model PayMethod {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  mobilePay String
  payments  Payment[]

}

model Payment {
  id          String          @id @default(cuid())
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @default(now()) @updatedAt
  datePaid    DateTime        @default(now())
  amtPaid     Int
  tranxNo     String          @unique
  receipts    Receipt[]
  PayMethod   PayMethod       @relation(fields: [payMethodId], references: [id])
  payMethodId String
  Paymaster   CenexasExaminer @relation(name: "paymaster", fields: [paymasterId], references: [id])
  paymasterId String
  Payee       CenexasExaminer @relation(name: "payee", fields: [payeeId], references: [id])
  payeeId     String

}

model Receipt {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt
  idCard        String
  idCardNo      String
  receiptNo     String   @unique
  signedReceipt String
  Payment       Payment  @relation(fields: [paymentId], references: [id])
  paymentId     String

}

model SeatingPlan {
  id             String        @id @default(cuid())
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @default(now()) @updatedAt
  col1           String
  col2           String?
  col3           String?
  col4           String?
  col5           String?
  col6           String?
  col7           String?
  col8           String?
  col9           String?
  col10          String?
  col11          String?
  col12          String?
  col13          String?
  col14          String?
  col15          String?
  col16          String?
  col17          String?
  col18          String?
  col19          String?
  col20          String?
  Invigilation   Invigilation? @relation(fields: [invigilationId], references: [id])
  invigilationId String?
}

model CenterExamSession {
  id                 String              @id @default(cuid())
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @default(now()) @updatedAt
  registrations      Registration[]
  cenexasExaminers   CenexasExaminer[]
  cenexasHalls       CenexasHall[]
  cenexasHallDistros CenexasHallDistro[]
  reports            Report[]
  Exam               Exam                @relation(fields: [examId], references: [id])
  cenexasId          String              @unique
  examId             String
  Session            Session             @relation(fields: [sessionId], references: [id])
  sessionId          String
  Center             Center              @relation(fields: [centerId], references: [id])
  centerId           String

}
